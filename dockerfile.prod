
# Etapa 1: Construcción de la aplicación
FROM node:18-alpine AS build

# Establece el directorio de trabajo
WORKDIR /app

# Copia los archivos de dependencias del proyecto
COPY package*.json ./

# Instala las dependencias del proyecto
RUN npm ci

# Copia el resto del código de la aplicación
COPY . .

# Construye la aplicación para producción
RUN npm run build

# Etapa 2: Servir la aplicación con Nginx
FROM nginx:alpine

# Copia el archivo de configuración de Nginx
COPY nginx.conf /etc/nginx/nginx.conf

# Copia los archivos de construcción de la etapa anterior
COPY --from=build /app/dist /usr/share/nginx/html

# Exponer el puerto en el que Nginx se ejecutará
EXPOSE 80

# Comando por defecto para iniciar Nginx
CMD ["nginx", "-g", "daemon off;"]



# # Etapa 1: Construcción de la aplicación
# FROM node:18-alpine AS build

# # Establece el directorio de trabajo
# WORKDIR /app

# # Copia los archivos de dependencias del proyecto
# COPY package*.json ./

# # Instala las dependencias del proyecto
# RUN npm ci --only=production

# # Copia el resto del código de la aplicación
# COPY . .

# # Construye la aplicación para producción
# RUN npm run build

# # Etapa 2: Servir la aplicación
# FROM nginx:stable-alpine

# # Remover servidores web innecesarios
# RUN apk --no-cache add tini

# # Copia los archivos de construcción de la etapa anterior
# COPY --from=build /app/dist /usr/share/nginx/html

# # Copia el archivo de configuración de Nginx
# COPY nginx.conf /etc/nginx/nginx.conf

# # Exponer el puerto en el que la aplicación se ejecutará
# EXPOSE 80

# # Establece el comando por defecto para iniciar Nginx
# CMD ["nginx", "-g", "daemon off;"]

